#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MX 5

void playfair(char ch1, char ch2, char key[MX][MX]) {
    int i, j, w = -1, x = -1, y = -1, z = -1;
    FILE *out = fopen("cipher.txt", "a+");
    if (out == NULL) {
        printf("File Corrupted.");
        return;
    }

    // Locate characters in key matrix
    for (i = 0; i < MX; i++) {
        for (j = 0; j < MX; j++) {
            if (key[i][j] == ch1) {
                w = i; x = j;
            } else if (key[i][j] == ch2) {
                y = i; z = j;
            }
        }
    }

    // Same row
    if (w == y) {
        x = (x + 1) % 5;
        z = (z + 1) % 5;
    }
    // Same column
    else if (x == z) {
        w = (w + 1) % 5;
        y = (y + 1) % 5;
    }
    // Rectangle
    else {
        int temp = x;
        x = z;
        z = temp;
    }

    printf("%c%c", key[w][x], key[y][z]);
    fprintf(out, "%c%c", key[w][x], key[y][z]);
    fclose(out);
}

int main() {
    int i, j, k = 0, l, m = 0, n;
    char key[MX][MX], keyminus[25], keystr[26], str[100] = {0};
    char alpa[26] = {'A','B','C','D','E','F','G','H','I','J','K','L',
                     'M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'};

    printf("\nEnter key: ");
    fgets(keystr, sizeof(keystr), stdin);
    keystr[strcspn(keystr, "\n")] = 0;  // remove newline

    printf("Enter the plain text: ");
    fgets(str, sizeof(str), stdin);
    str[strcspn(str, "\n")] = 0;

    // Convert key to uppercase and remove 'J'
    n = strlen(keystr);
    for (i = 0; i < n; i++) {
        if (keystr[i] == 'j' || keystr[i] == 'J') keystr[i] = 'I';
        keystr[i] = toupper(keystr[i]);
    }

    // Convert plaintext to uppercase and replace J with I
    for (i = 0; i < strlen(str); i++) {
        if (str[i] == 'j' || str[i] == 'J') str[i] = 'I';
        str[i] = toupper(str[i]);
    }

    // Remove duplicate letters from key
    j = 0;
    for (i = 0; i < 26; i++) {
        for (k = 0; k < n; k++) {
            if (keystr[k] == alpa[i] || (alpa[i] == 'J')) break;
        }
        if (k == n) {
            keyminus[j++] = alpa[i];
        }
    }

    // Construct key matrix
    k = 0;
    n = strlen(keystr);
    for (i = 0; i < MX; i++) {
        for (j = 0; j < MX; j++) {
            if (k < n)
                key[i][j] = keystr[k++];
            else
                key[i][j] = keyminus[m++];
            printf("%c ", key[i][j]);
        }
        printf("\n");
    }

    printf("\nEntered Text: %s\nCipher Text: ", str);

    // Apply Playfair rules
    for (i = 0; i < strlen(str); i++) {
        char ch1 = str[i];
        char ch2;

        if (str[i + 1] == '\0') {
            ch2 = 'X';
        } else {
            if (str[i] == str[i + 1]) {
                ch2 = 'X';
            } else {
                ch2 = str[i + 1];
                i++;  // advance i as pair is complete
            }
        }

        playfair(ch1, ch2, key);
    }

    printf("\n");
    return 0;
}
